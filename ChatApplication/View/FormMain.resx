<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_btnCreateGroupChat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAwdJREFUWEftkd1L01EYx1dXBYUFQkYXSqQpmaKbOLTypZRJ5huaoikz56Tpgg3a
        jgR10dtyWqHzRiHJFF+6UFQUw7kZOfsDulxXvV51n8H36Rz9rfmyzZ8ytYs+8OU85znf8z0Pv5/iP//5
        5zhlhPqkEdbdUJQRWdIzwYk2EIsxYImvtjDLHXMLT6RnghOnJ3a2SYZxm8jOTWogdl4X/gFk56bVE1Np
        tzYq9RSh1KJJVU96UUvtoMjNVWTWEsuoC228UE3HM2vh5RqQ5N1qCDm5K+TUEMutDm3MrUFTTjVeS1t+
        BwN83yhtAyIndwVNJbGCqvXGZg9SWzwwiVXs+XljQaV/AE0VBkVP1Bu9PgLlBqSkglhxud/4dAGpdjd+
        291EbS4st7uRUlxMx7jHW1KOQSFRV1RQRCCvFLMpNyiVZcSul/qNI7Mwj8wS+QWz6IsHuVdfUYJGUYfy
        CjbmBqW2iNiNYr9xcRwpngksL00QifXDJJL5g0dqr6GM+yxCdUUovVmEo4G8Usym3KA0FBLTXfUbTR4c
        fu6GtduJSfsCWnXlqOPnX7neNhSiU0iqf+rKSMs/+13h7XDhjrgrxWzKDYpBQ6y5YNXocFGUw4lP3U4i
        obaX+NiswXejxv9vfYieOBMen1/cfTGHE+J8bW5IzPnETHmrRucUTM4pIp+e3YbLlI8FLmsgmfMw32bA
        /No7XGxjbkharxBjuavGz28o+8so2XwaNcPSeplsodTfAsvaO99GoNmYG5L7OcTuZcswbhPZuY8uEnt8
        KfwDyM5tzyTWkRH+AWTnOtKJOdRwdaXDuhN1qpEpRa1D5HapZQzQq6TsXhXZdqKeNNh7VPjRk0ZaKe4v
        vWnE+FnYv+wm+pQU358Cb38qHpKCDkhtxSslMd7f/QEEg0qKHE6CZyQZQ33RdEj0RpOIDSfv0QACF394
        LBFD44lYnIijyPFEYmPn9nAAgfgF0/F4MBMP73QC+mYS9ngAH3OxpHXG4tdc7D4NIHh3BlnvT8MibfcH
        /ksOSqWEQvEHh5znr+dUlsUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAMMOAADDDgAAAAAAAAAA
        AACLfWAAi31gAIt9YAABAQEAAQEBAI1/YgCNf2IAjX9iAIt9YACLfWAAi31gAAEBAQABAQEAjX9iAI1/
        YgCNf2IAi31gAIt9YGiLfWCpi31gpIt9YKSLfWCpi31gaIx+YQCLfWAAi31gaIt9YKmLfWCki31gpIt9
        YKmLfWBnjH5hAIt9XwCLfWBOi31g24t9X/6LfV/+i31g24t9YE6LfWAAi31fAIt9YE+LfWDbi31f/ot9
        X/6LfWDbi31gTot9YACLfF8Ac4+CAIx8XiF4hH1heIR9YYx8XiF8hXYAinxfAIt8XwBzj4IAjHxeIXiE
        fWF4hH1hjHxeIXyFdgCKfF8AjHtfACqm+QAiqP89JKj/xCSo/8QiqP89KqX5AIt8YACMe18AKqb5ACKo
        /z0kqP/EJKj/xCKo/z0qpfkAi3xgAAMLEQAqqf8AJqf/mSan//8mp///Jqf/mSqr/wAAAAAABBQfACqp
        /wAmp/+ZJqf//yan//8lp/+Ze4WBAMBlFQDzliEAcaGvACWn/2cmp//zJqf/8yan/2YnqP8AAAAAAAIK
        DwAmp/8AJqf/Zyan//Mmp//zJ6b8Z9FdABPAZRUB85YhAfmVGxQ8pOcJJaf/Qian/kMmpv4IJaf/AL9l
        FQDAZRUAr2wvAAD8/wQZrP8+HKv/P7FrK1bBZRSEwGUVAvOWIQLzliGE9JYfTo2fjwCcnX8A3Zc4APWW
        IAC5XxMkv2QVV8BlFVrBZRRZx2ILVcVjDWvAZRTjwGUVp79lFQDzlSEA85Yhp/OWIeTzliFv85YhWfOW
        IVnwkyBg1noax8dsF//AZRX/wGUV/8BlFf/AZRX/wGUV/8BlFaQPCAIAPSYIAPOWIaTzliH/85Yh//OW
        If/zliH/85Yh//OWIf/miR7/w2gW/8BlFf/AZRX/wGUV/8BlFf/AZRWkDwgCAD0mCADzliGk85Yh//OW
        If/zliH/85Yh//OWIf/zliH/7ZEg/8ZrFv/AZRX/wGUV/8BlFf/AZRX/wGUVpb9iFQDzliAA85YhpfOW
        If/zliH/85Yh//OWIf/zliH/85Yh/+2QIP/Gaxb/wGUV/8BlFf/AZRX/wGUV/8BlFZXCZhUA85YjAPOW
        IZXzliH/85Yh//OWIf/zliH/85Yh//OWIf/vkiDqx2wXqsBlFaXAZRWlwGUVpsBlFZfAZRQuwGUVAPOW
        IQDzlSEt85YhlfOWIaXzliGk85YhpPOWIaTzliGi85YhVvKVIALylSAACQUBAL9kFgDCZRYAwGUVAMNj
        FgDylyIA85YhAPOYIwDzlSAADwkCAA8JAgDzmSYA85omAPOWIQDzlSAA85UgAAEBAAABAQAAAQEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>